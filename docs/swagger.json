{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "这是一个用于 Figma 数据导出的 API 服务",
        "title": "Figma Export Ultra API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/admin/ping": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Protected route requiring admin role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Admin Ping",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/admin/users/{id}/promote": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Set user.type = admin",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Promote user to admin",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User UUID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/auth/anonymous/init": {
            "post": {
                "description": "Initialize anonymous visitor, upsert device, issue tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Anonymous Init",
                "parameters": [
                    {
                        "description": "anonymous init",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.AnonymousInitRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "Requests per window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "Remaining requests"
                            }
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "string",
                                "description": "Seconds to wait"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/fp/sync": {
            "post": {
                "description": "Upsert device and fingerprint metadata; bind to current user/visitor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Fingerprint/Device Sync",
                "parameters": [
                    {
                        "description": "fingerprint/device sync",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.FpSyncRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "Requests per window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "Remaining requests"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "string",
                                "description": "Seconds to wait"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/login": {
            "post": {
                "description": "Authenticate by identifier/password and issue tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login (password)",
                "parameters": [
                    {
                        "description": "login",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "Requests per window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "Remaining requests"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "string",
                                "description": "Seconds to wait"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/logout": {
            "post": {
                "description": "Clear refresh cookie; access tokens expire naturally",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout (clear refresh)",
                "responses": {
                    "204": {
                        "description": "no content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "string",
                                "description": "Seconds to wait"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Return current auth context",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Who am I",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "Requests per window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "Remaining requests"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "string",
                                "description": "Seconds to wait"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/refresh": {
            "post": {
                "description": "Mint new access token from refresh cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh Access Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "Requests per window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "Remaining requests"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "string",
                                "description": "Seconds to wait"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/auth/register": {
            "post": {
                "description": "Create user + password identity, then issue tokens",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register (password)",
                "parameters": [
                    {
                        "description": "register",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.TokenResponse"
                        },
                        "headers": {
                            "X-RateLimit-Limit": {
                                "type": "string",
                                "description": "Requests per window"
                            },
                            "X-RateLimit-Remaining": {
                                "type": "string",
                                "description": "Remaining requests"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "429": {
                        "description": "Too Many Requests",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "headers": {
                            "Retry-After": {
                                "type": "string",
                                "description": "Seconds to wait"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/users": {
            "get": {
                "description": "Supports paging, sorting, and display_name filter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "List users",
                "parameters": [
                    {
                        "type": "string",
                        "description": "display_name filter",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "page size",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort field",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "offset",
                        "description": "paging mode: offset|cursor|snapshot",
                        "name": "mode",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "cursor value (cursor mode)",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "snapshot time (snapshot mode)",
                        "name": "snapshot",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "return total in offset mode",
                        "name": "with_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user list",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "Create a user with display_name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "{display_name}",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/users.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "internal error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "API health/liveness probe",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health Check",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.AnonymousInitRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string",
                    "example": "web-uuid-123"
                },
                "fp_hash": {
                    "type": "string",
                    "example": "sha256:abcdef..."
                },
                "meta": {
                    "type": "object",
                    "additionalProperties": {}
                }
            }
        },
        "auth.FpSyncRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string",
                    "example": "web-uuid-123"
                },
                "fp_hash": {
                    "type": "string",
                    "example": "sha256:abcdef..."
                },
                "ip_hash": {
                    "type": "string",
                    "example": "sha256:ip..."
                },
                "meta": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "ua_hash": {
                    "type": "string",
                    "example": "sha256:ua..."
                }
            }
        },
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string",
                    "example": "web-uuid-123"
                },
                "identifier": {
                    "type": "string",
                    "example": "alice@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "Secretp@ssw0rd"
                }
            }
        },
        "auth.RegisterRequest": {
            "type": "object",
            "properties": {
                "device_id": {
                    "type": "string",
                    "example": "web-uuid-123"
                },
                "display_name": {
                    "type": "string",
                    "example": "Alice"
                },
                "identifier": {
                    "type": "string",
                    "example": "alice@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "Secretp@ssw0rd"
                }
            }
        },
        "auth.TokenResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "\u003cJWT\u003e"
                },
                "anon_id": {
                    "type": "string",
                    "example": "8a0d1b7c-..."
                },
                "device_id": {
                    "type": "string",
                    "example": "web-uuid-123"
                },
                "expires_in": {
                    "type": "integer",
                    "example": 900
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "users.UserCreateRequest": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string",
                    "example": "Alice"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}