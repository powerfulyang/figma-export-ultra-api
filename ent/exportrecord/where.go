// Code generated by ent, DO NOT EDIT.

package exportrecord

import (
	"fiber-ent-apollo-pg/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldID, id))
}

// FigmaFileID applies equality check predicate on the "figma_file_id" field. It's identical to FigmaFileIDEQ.
func FigmaFileID(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldFigmaFileID, v))
}

// FigmaFileName applies equality check predicate on the "figma_file_name" field. It's identical to FigmaFileNameEQ.
func FigmaFileName(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldFigmaFileName, v))
}

// FigmaFileURL applies equality check predicate on the "figma_file_url" field. It's identical to FigmaFileURLEQ.
func FigmaFileURL(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldFigmaFileURL, v))
}

// ExportScale applies equality check predicate on the "export_scale" field. It's identical to ExportScaleEQ.
func ExportScale(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldExportScale, v))
}

// TotalAssets applies equality check predicate on the "total_assets" field. It's identical to TotalAssetsEQ.
func TotalAssets(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldTotalAssets, v))
}

// ExportedAssets applies equality check predicate on the "exported_assets" field. It's identical to ExportedAssetsEQ.
func ExportedAssets(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldExportedAssets, v))
}

// DownloadURL applies equality check predicate on the "download_url" field. It's identical to DownloadURLEQ.
func DownloadURL(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldDownloadURL, v))
}

// ErrorMessage applies equality check predicate on the "error_message" field. It's identical to ErrorMessageEQ.
func ErrorMessage(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldErrorMessage, v))
}

// IPAddress applies equality check predicate on the "ip_address" field. It's identical to IPAddressEQ.
func IPAddress(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldIPAddress, v))
}

// UserAgent applies equality check predicate on the "user_agent" field. It's identical to UserAgentEQ.
func UserAgent(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldUserAgent, v))
}

// StartedAt applies equality check predicate on the "started_at" field. It's identical to StartedAtEQ.
func StartedAt(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldStartedAt, v))
}

// CompletedAt applies equality check predicate on the "completed_at" field. It's identical to CompletedAtEQ.
func CompletedAt(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldCompletedAt, v))
}

// ExpiresAt applies equality check predicate on the "expires_at" field. It's identical to ExpiresAtEQ.
func ExpiresAt(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldExpiresAt, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldUpdatedAt, v))
}

// FigmaFileIDEQ applies the EQ predicate on the "figma_file_id" field.
func FigmaFileIDEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldFigmaFileID, v))
}

// FigmaFileIDNEQ applies the NEQ predicate on the "figma_file_id" field.
func FigmaFileIDNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldFigmaFileID, v))
}

// FigmaFileIDIn applies the In predicate on the "figma_file_id" field.
func FigmaFileIDIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldFigmaFileID, vs...))
}

// FigmaFileIDNotIn applies the NotIn predicate on the "figma_file_id" field.
func FigmaFileIDNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldFigmaFileID, vs...))
}

// FigmaFileIDGT applies the GT predicate on the "figma_file_id" field.
func FigmaFileIDGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldFigmaFileID, v))
}

// FigmaFileIDGTE applies the GTE predicate on the "figma_file_id" field.
func FigmaFileIDGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldFigmaFileID, v))
}

// FigmaFileIDLT applies the LT predicate on the "figma_file_id" field.
func FigmaFileIDLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldFigmaFileID, v))
}

// FigmaFileIDLTE applies the LTE predicate on the "figma_file_id" field.
func FigmaFileIDLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldFigmaFileID, v))
}

// FigmaFileIDContains applies the Contains predicate on the "figma_file_id" field.
func FigmaFileIDContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldFigmaFileID, v))
}

// FigmaFileIDHasPrefix applies the HasPrefix predicate on the "figma_file_id" field.
func FigmaFileIDHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldFigmaFileID, v))
}

// FigmaFileIDHasSuffix applies the HasSuffix predicate on the "figma_file_id" field.
func FigmaFileIDHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldFigmaFileID, v))
}

// FigmaFileIDEqualFold applies the EqualFold predicate on the "figma_file_id" field.
func FigmaFileIDEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldFigmaFileID, v))
}

// FigmaFileIDContainsFold applies the ContainsFold predicate on the "figma_file_id" field.
func FigmaFileIDContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldFigmaFileID, v))
}

// FigmaFileNameEQ applies the EQ predicate on the "figma_file_name" field.
func FigmaFileNameEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldFigmaFileName, v))
}

// FigmaFileNameNEQ applies the NEQ predicate on the "figma_file_name" field.
func FigmaFileNameNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldFigmaFileName, v))
}

// FigmaFileNameIn applies the In predicate on the "figma_file_name" field.
func FigmaFileNameIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldFigmaFileName, vs...))
}

// FigmaFileNameNotIn applies the NotIn predicate on the "figma_file_name" field.
func FigmaFileNameNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldFigmaFileName, vs...))
}

// FigmaFileNameGT applies the GT predicate on the "figma_file_name" field.
func FigmaFileNameGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldFigmaFileName, v))
}

// FigmaFileNameGTE applies the GTE predicate on the "figma_file_name" field.
func FigmaFileNameGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldFigmaFileName, v))
}

// FigmaFileNameLT applies the LT predicate on the "figma_file_name" field.
func FigmaFileNameLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldFigmaFileName, v))
}

// FigmaFileNameLTE applies the LTE predicate on the "figma_file_name" field.
func FigmaFileNameLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldFigmaFileName, v))
}

// FigmaFileNameContains applies the Contains predicate on the "figma_file_name" field.
func FigmaFileNameContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldFigmaFileName, v))
}

// FigmaFileNameHasPrefix applies the HasPrefix predicate on the "figma_file_name" field.
func FigmaFileNameHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldFigmaFileName, v))
}

// FigmaFileNameHasSuffix applies the HasSuffix predicate on the "figma_file_name" field.
func FigmaFileNameHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldFigmaFileName, v))
}

// FigmaFileNameIsNil applies the IsNil predicate on the "figma_file_name" field.
func FigmaFileNameIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldFigmaFileName))
}

// FigmaFileNameNotNil applies the NotNil predicate on the "figma_file_name" field.
func FigmaFileNameNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldFigmaFileName))
}

// FigmaFileNameEqualFold applies the EqualFold predicate on the "figma_file_name" field.
func FigmaFileNameEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldFigmaFileName, v))
}

// FigmaFileNameContainsFold applies the ContainsFold predicate on the "figma_file_name" field.
func FigmaFileNameContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldFigmaFileName, v))
}

// FigmaFileURLEQ applies the EQ predicate on the "figma_file_url" field.
func FigmaFileURLEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldFigmaFileURL, v))
}

// FigmaFileURLNEQ applies the NEQ predicate on the "figma_file_url" field.
func FigmaFileURLNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldFigmaFileURL, v))
}

// FigmaFileURLIn applies the In predicate on the "figma_file_url" field.
func FigmaFileURLIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldFigmaFileURL, vs...))
}

// FigmaFileURLNotIn applies the NotIn predicate on the "figma_file_url" field.
func FigmaFileURLNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldFigmaFileURL, vs...))
}

// FigmaFileURLGT applies the GT predicate on the "figma_file_url" field.
func FigmaFileURLGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldFigmaFileURL, v))
}

// FigmaFileURLGTE applies the GTE predicate on the "figma_file_url" field.
func FigmaFileURLGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldFigmaFileURL, v))
}

// FigmaFileURLLT applies the LT predicate on the "figma_file_url" field.
func FigmaFileURLLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldFigmaFileURL, v))
}

// FigmaFileURLLTE applies the LTE predicate on the "figma_file_url" field.
func FigmaFileURLLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldFigmaFileURL, v))
}

// FigmaFileURLContains applies the Contains predicate on the "figma_file_url" field.
func FigmaFileURLContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldFigmaFileURL, v))
}

// FigmaFileURLHasPrefix applies the HasPrefix predicate on the "figma_file_url" field.
func FigmaFileURLHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldFigmaFileURL, v))
}

// FigmaFileURLHasSuffix applies the HasSuffix predicate on the "figma_file_url" field.
func FigmaFileURLHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldFigmaFileURL, v))
}

// FigmaFileURLIsNil applies the IsNil predicate on the "figma_file_url" field.
func FigmaFileURLIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldFigmaFileURL))
}

// FigmaFileURLNotNil applies the NotNil predicate on the "figma_file_url" field.
func FigmaFileURLNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldFigmaFileURL))
}

// FigmaFileURLEqualFold applies the EqualFold predicate on the "figma_file_url" field.
func FigmaFileURLEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldFigmaFileURL, v))
}

// FigmaFileURLContainsFold applies the ContainsFold predicate on the "figma_file_url" field.
func FigmaFileURLContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldFigmaFileURL, v))
}

// ExportFormatEQ applies the EQ predicate on the "export_format" field.
func ExportFormatEQ(v ExportFormat) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldExportFormat, v))
}

// ExportFormatNEQ applies the NEQ predicate on the "export_format" field.
func ExportFormatNEQ(v ExportFormat) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldExportFormat, v))
}

// ExportFormatIn applies the In predicate on the "export_format" field.
func ExportFormatIn(vs ...ExportFormat) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldExportFormat, vs...))
}

// ExportFormatNotIn applies the NotIn predicate on the "export_format" field.
func ExportFormatNotIn(vs ...ExportFormat) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldExportFormat, vs...))
}

// ExportScaleEQ applies the EQ predicate on the "export_scale" field.
func ExportScaleEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldExportScale, v))
}

// ExportScaleNEQ applies the NEQ predicate on the "export_scale" field.
func ExportScaleNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldExportScale, v))
}

// ExportScaleIn applies the In predicate on the "export_scale" field.
func ExportScaleIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldExportScale, vs...))
}

// ExportScaleNotIn applies the NotIn predicate on the "export_scale" field.
func ExportScaleNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldExportScale, vs...))
}

// ExportScaleGT applies the GT predicate on the "export_scale" field.
func ExportScaleGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldExportScale, v))
}

// ExportScaleGTE applies the GTE predicate on the "export_scale" field.
func ExportScaleGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldExportScale, v))
}

// ExportScaleLT applies the LT predicate on the "export_scale" field.
func ExportScaleLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldExportScale, v))
}

// ExportScaleLTE applies the LTE predicate on the "export_scale" field.
func ExportScaleLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldExportScale, v))
}

// ExportScaleContains applies the Contains predicate on the "export_scale" field.
func ExportScaleContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldExportScale, v))
}

// ExportScaleHasPrefix applies the HasPrefix predicate on the "export_scale" field.
func ExportScaleHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldExportScale, v))
}

// ExportScaleHasSuffix applies the HasSuffix predicate on the "export_scale" field.
func ExportScaleHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldExportScale, v))
}

// ExportScaleEqualFold applies the EqualFold predicate on the "export_scale" field.
func ExportScaleEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldExportScale, v))
}

// ExportScaleContainsFold applies the ContainsFold predicate on the "export_scale" field.
func ExportScaleContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldExportScale, v))
}

// SelectedNodesIsNil applies the IsNil predicate on the "selected_nodes" field.
func SelectedNodesIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldSelectedNodes))
}

// SelectedNodesNotNil applies the NotNil predicate on the "selected_nodes" field.
func SelectedNodesNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldSelectedNodes))
}

// TotalAssetsEQ applies the EQ predicate on the "total_assets" field.
func TotalAssetsEQ(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldTotalAssets, v))
}

// TotalAssetsNEQ applies the NEQ predicate on the "total_assets" field.
func TotalAssetsNEQ(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldTotalAssets, v))
}

// TotalAssetsIn applies the In predicate on the "total_assets" field.
func TotalAssetsIn(vs ...int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldTotalAssets, vs...))
}

// TotalAssetsNotIn applies the NotIn predicate on the "total_assets" field.
func TotalAssetsNotIn(vs ...int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldTotalAssets, vs...))
}

// TotalAssetsGT applies the GT predicate on the "total_assets" field.
func TotalAssetsGT(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldTotalAssets, v))
}

// TotalAssetsGTE applies the GTE predicate on the "total_assets" field.
func TotalAssetsGTE(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldTotalAssets, v))
}

// TotalAssetsLT applies the LT predicate on the "total_assets" field.
func TotalAssetsLT(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldTotalAssets, v))
}

// TotalAssetsLTE applies the LTE predicate on the "total_assets" field.
func TotalAssetsLTE(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldTotalAssets, v))
}

// ExportedAssetsEQ applies the EQ predicate on the "exported_assets" field.
func ExportedAssetsEQ(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldExportedAssets, v))
}

// ExportedAssetsNEQ applies the NEQ predicate on the "exported_assets" field.
func ExportedAssetsNEQ(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldExportedAssets, v))
}

// ExportedAssetsIn applies the In predicate on the "exported_assets" field.
func ExportedAssetsIn(vs ...int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldExportedAssets, vs...))
}

// ExportedAssetsNotIn applies the NotIn predicate on the "exported_assets" field.
func ExportedAssetsNotIn(vs ...int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldExportedAssets, vs...))
}

// ExportedAssetsGT applies the GT predicate on the "exported_assets" field.
func ExportedAssetsGT(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldExportedAssets, v))
}

// ExportedAssetsGTE applies the GTE predicate on the "exported_assets" field.
func ExportedAssetsGTE(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldExportedAssets, v))
}

// ExportedAssetsLT applies the LT predicate on the "exported_assets" field.
func ExportedAssetsLT(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldExportedAssets, v))
}

// ExportedAssetsLTE applies the LTE predicate on the "exported_assets" field.
func ExportedAssetsLTE(v int) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldExportedAssets, v))
}

// StatusEQ applies the EQ predicate on the "status" field.
func StatusEQ(v Status) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldStatus, v))
}

// StatusNEQ applies the NEQ predicate on the "status" field.
func StatusNEQ(v Status) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldStatus, v))
}

// StatusIn applies the In predicate on the "status" field.
func StatusIn(vs ...Status) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldStatus, vs...))
}

// StatusNotIn applies the NotIn predicate on the "status" field.
func StatusNotIn(vs ...Status) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldStatus, vs...))
}

// DownloadURLEQ applies the EQ predicate on the "download_url" field.
func DownloadURLEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldDownloadURL, v))
}

// DownloadURLNEQ applies the NEQ predicate on the "download_url" field.
func DownloadURLNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldDownloadURL, v))
}

// DownloadURLIn applies the In predicate on the "download_url" field.
func DownloadURLIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldDownloadURL, vs...))
}

// DownloadURLNotIn applies the NotIn predicate on the "download_url" field.
func DownloadURLNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldDownloadURL, vs...))
}

// DownloadURLGT applies the GT predicate on the "download_url" field.
func DownloadURLGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldDownloadURL, v))
}

// DownloadURLGTE applies the GTE predicate on the "download_url" field.
func DownloadURLGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldDownloadURL, v))
}

// DownloadURLLT applies the LT predicate on the "download_url" field.
func DownloadURLLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldDownloadURL, v))
}

// DownloadURLLTE applies the LTE predicate on the "download_url" field.
func DownloadURLLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldDownloadURL, v))
}

// DownloadURLContains applies the Contains predicate on the "download_url" field.
func DownloadURLContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldDownloadURL, v))
}

// DownloadURLHasPrefix applies the HasPrefix predicate on the "download_url" field.
func DownloadURLHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldDownloadURL, v))
}

// DownloadURLHasSuffix applies the HasSuffix predicate on the "download_url" field.
func DownloadURLHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldDownloadURL, v))
}

// DownloadURLIsNil applies the IsNil predicate on the "download_url" field.
func DownloadURLIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldDownloadURL))
}

// DownloadURLNotNil applies the NotNil predicate on the "download_url" field.
func DownloadURLNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldDownloadURL))
}

// DownloadURLEqualFold applies the EqualFold predicate on the "download_url" field.
func DownloadURLEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldDownloadURL, v))
}

// DownloadURLContainsFold applies the ContainsFold predicate on the "download_url" field.
func DownloadURLContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldDownloadURL, v))
}

// ErrorMessageEQ applies the EQ predicate on the "error_message" field.
func ErrorMessageEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldErrorMessage, v))
}

// ErrorMessageNEQ applies the NEQ predicate on the "error_message" field.
func ErrorMessageNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldErrorMessage, v))
}

// ErrorMessageIn applies the In predicate on the "error_message" field.
func ErrorMessageIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldErrorMessage, vs...))
}

// ErrorMessageNotIn applies the NotIn predicate on the "error_message" field.
func ErrorMessageNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldErrorMessage, vs...))
}

// ErrorMessageGT applies the GT predicate on the "error_message" field.
func ErrorMessageGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldErrorMessage, v))
}

// ErrorMessageGTE applies the GTE predicate on the "error_message" field.
func ErrorMessageGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldErrorMessage, v))
}

// ErrorMessageLT applies the LT predicate on the "error_message" field.
func ErrorMessageLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldErrorMessage, v))
}

// ErrorMessageLTE applies the LTE predicate on the "error_message" field.
func ErrorMessageLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldErrorMessage, v))
}

// ErrorMessageContains applies the Contains predicate on the "error_message" field.
func ErrorMessageContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldErrorMessage, v))
}

// ErrorMessageHasPrefix applies the HasPrefix predicate on the "error_message" field.
func ErrorMessageHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldErrorMessage, v))
}

// ErrorMessageHasSuffix applies the HasSuffix predicate on the "error_message" field.
func ErrorMessageHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldErrorMessage, v))
}

// ErrorMessageIsNil applies the IsNil predicate on the "error_message" field.
func ErrorMessageIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldErrorMessage))
}

// ErrorMessageNotNil applies the NotNil predicate on the "error_message" field.
func ErrorMessageNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldErrorMessage))
}

// ErrorMessageEqualFold applies the EqualFold predicate on the "error_message" field.
func ErrorMessageEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldErrorMessage, v))
}

// ErrorMessageContainsFold applies the ContainsFold predicate on the "error_message" field.
func ErrorMessageContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldErrorMessage, v))
}

// IPAddressEQ applies the EQ predicate on the "ip_address" field.
func IPAddressEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldIPAddress, v))
}

// IPAddressNEQ applies the NEQ predicate on the "ip_address" field.
func IPAddressNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldIPAddress, v))
}

// IPAddressIn applies the In predicate on the "ip_address" field.
func IPAddressIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldIPAddress, vs...))
}

// IPAddressNotIn applies the NotIn predicate on the "ip_address" field.
func IPAddressNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldIPAddress, vs...))
}

// IPAddressGT applies the GT predicate on the "ip_address" field.
func IPAddressGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldIPAddress, v))
}

// IPAddressGTE applies the GTE predicate on the "ip_address" field.
func IPAddressGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldIPAddress, v))
}

// IPAddressLT applies the LT predicate on the "ip_address" field.
func IPAddressLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldIPAddress, v))
}

// IPAddressLTE applies the LTE predicate on the "ip_address" field.
func IPAddressLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldIPAddress, v))
}

// IPAddressContains applies the Contains predicate on the "ip_address" field.
func IPAddressContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldIPAddress, v))
}

// IPAddressHasPrefix applies the HasPrefix predicate on the "ip_address" field.
func IPAddressHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldIPAddress, v))
}

// IPAddressHasSuffix applies the HasSuffix predicate on the "ip_address" field.
func IPAddressHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldIPAddress, v))
}

// IPAddressIsNil applies the IsNil predicate on the "ip_address" field.
func IPAddressIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldIPAddress))
}

// IPAddressNotNil applies the NotNil predicate on the "ip_address" field.
func IPAddressNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldIPAddress))
}

// IPAddressEqualFold applies the EqualFold predicate on the "ip_address" field.
func IPAddressEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldIPAddress, v))
}

// IPAddressContainsFold applies the ContainsFold predicate on the "ip_address" field.
func IPAddressContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldIPAddress, v))
}

// UserAgentEQ applies the EQ predicate on the "user_agent" field.
func UserAgentEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldUserAgent, v))
}

// UserAgentNEQ applies the NEQ predicate on the "user_agent" field.
func UserAgentNEQ(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldUserAgent, v))
}

// UserAgentIn applies the In predicate on the "user_agent" field.
func UserAgentIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldUserAgent, vs...))
}

// UserAgentNotIn applies the NotIn predicate on the "user_agent" field.
func UserAgentNotIn(vs ...string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldUserAgent, vs...))
}

// UserAgentGT applies the GT predicate on the "user_agent" field.
func UserAgentGT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldUserAgent, v))
}

// UserAgentGTE applies the GTE predicate on the "user_agent" field.
func UserAgentGTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldUserAgent, v))
}

// UserAgentLT applies the LT predicate on the "user_agent" field.
func UserAgentLT(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldUserAgent, v))
}

// UserAgentLTE applies the LTE predicate on the "user_agent" field.
func UserAgentLTE(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldUserAgent, v))
}

// UserAgentContains applies the Contains predicate on the "user_agent" field.
func UserAgentContains(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContains(FieldUserAgent, v))
}

// UserAgentHasPrefix applies the HasPrefix predicate on the "user_agent" field.
func UserAgentHasPrefix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasPrefix(FieldUserAgent, v))
}

// UserAgentHasSuffix applies the HasSuffix predicate on the "user_agent" field.
func UserAgentHasSuffix(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldHasSuffix(FieldUserAgent, v))
}

// UserAgentIsNil applies the IsNil predicate on the "user_agent" field.
func UserAgentIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldUserAgent))
}

// UserAgentNotNil applies the NotNil predicate on the "user_agent" field.
func UserAgentNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldUserAgent))
}

// UserAgentEqualFold applies the EqualFold predicate on the "user_agent" field.
func UserAgentEqualFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEqualFold(FieldUserAgent, v))
}

// UserAgentContainsFold applies the ContainsFold predicate on the "user_agent" field.
func UserAgentContainsFold(v string) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldContainsFold(FieldUserAgent, v))
}

// StartedAtEQ applies the EQ predicate on the "started_at" field.
func StartedAtEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldStartedAt, v))
}

// StartedAtNEQ applies the NEQ predicate on the "started_at" field.
func StartedAtNEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldStartedAt, v))
}

// StartedAtIn applies the In predicate on the "started_at" field.
func StartedAtIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldStartedAt, vs...))
}

// StartedAtNotIn applies the NotIn predicate on the "started_at" field.
func StartedAtNotIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldStartedAt, vs...))
}

// StartedAtGT applies the GT predicate on the "started_at" field.
func StartedAtGT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldStartedAt, v))
}

// StartedAtGTE applies the GTE predicate on the "started_at" field.
func StartedAtGTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldStartedAt, v))
}

// StartedAtLT applies the LT predicate on the "started_at" field.
func StartedAtLT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldStartedAt, v))
}

// StartedAtLTE applies the LTE predicate on the "started_at" field.
func StartedAtLTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldStartedAt, v))
}

// StartedAtIsNil applies the IsNil predicate on the "started_at" field.
func StartedAtIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldStartedAt))
}

// StartedAtNotNil applies the NotNil predicate on the "started_at" field.
func StartedAtNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldStartedAt))
}

// CompletedAtEQ applies the EQ predicate on the "completed_at" field.
func CompletedAtEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldCompletedAt, v))
}

// CompletedAtNEQ applies the NEQ predicate on the "completed_at" field.
func CompletedAtNEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldCompletedAt, v))
}

// CompletedAtIn applies the In predicate on the "completed_at" field.
func CompletedAtIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldCompletedAt, vs...))
}

// CompletedAtNotIn applies the NotIn predicate on the "completed_at" field.
func CompletedAtNotIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldCompletedAt, vs...))
}

// CompletedAtGT applies the GT predicate on the "completed_at" field.
func CompletedAtGT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldCompletedAt, v))
}

// CompletedAtGTE applies the GTE predicate on the "completed_at" field.
func CompletedAtGTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldCompletedAt, v))
}

// CompletedAtLT applies the LT predicate on the "completed_at" field.
func CompletedAtLT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldCompletedAt, v))
}

// CompletedAtLTE applies the LTE predicate on the "completed_at" field.
func CompletedAtLTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldCompletedAt, v))
}

// CompletedAtIsNil applies the IsNil predicate on the "completed_at" field.
func CompletedAtIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldCompletedAt))
}

// CompletedAtNotNil applies the NotNil predicate on the "completed_at" field.
func CompletedAtNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldCompletedAt))
}

// ExpiresAtEQ applies the EQ predicate on the "expires_at" field.
func ExpiresAtEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldExpiresAt, v))
}

// ExpiresAtNEQ applies the NEQ predicate on the "expires_at" field.
func ExpiresAtNEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldExpiresAt, v))
}

// ExpiresAtIn applies the In predicate on the "expires_at" field.
func ExpiresAtIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldExpiresAt, vs...))
}

// ExpiresAtNotIn applies the NotIn predicate on the "expires_at" field.
func ExpiresAtNotIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldExpiresAt, vs...))
}

// ExpiresAtGT applies the GT predicate on the "expires_at" field.
func ExpiresAtGT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldExpiresAt, v))
}

// ExpiresAtGTE applies the GTE predicate on the "expires_at" field.
func ExpiresAtGTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldExpiresAt, v))
}

// ExpiresAtLT applies the LT predicate on the "expires_at" field.
func ExpiresAtLT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldExpiresAt, v))
}

// ExpiresAtLTE applies the LTE predicate on the "expires_at" field.
func ExpiresAtLTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldExpiresAt, v))
}

// ExpiresAtIsNil applies the IsNil predicate on the "expires_at" field.
func ExpiresAtIsNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIsNull(FieldExpiresAt))
}

// ExpiresAtNotNil applies the NotNil predicate on the "expires_at" field.
func ExpiresAtNotNil() predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotNull(FieldExpiresAt))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ExportRecord {
	return predicate.ExportRecord(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasUser applies the HasEdge predicate on the "user" edge.
func HasUser() predicate.ExportRecord {
	return predicate.ExportRecord(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, UserTable, UserColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasUserWith applies the HasEdge predicate on the "user" edge with a given conditions (other predicates).
func HasUserWith(preds ...predicate.User) predicate.ExportRecord {
	return predicate.ExportRecord(func(s *sql.Selector) {
		step := newUserStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// HasAnonymousUser applies the HasEdge predicate on the "anonymous_user" edge.
func HasAnonymousUser() predicate.ExportRecord {
	return predicate.ExportRecord(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AnonymousUserTable, AnonymousUserColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAnonymousUserWith applies the HasEdge predicate on the "anonymous_user" edge with a given conditions (other predicates).
func HasAnonymousUserWith(preds ...predicate.AnonymousUser) predicate.ExportRecord {
	return predicate.ExportRecord(func(s *sql.Selector) {
		step := newAnonymousUserStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ExportRecord) predicate.ExportRecord {
	return predicate.ExportRecord(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ExportRecord) predicate.ExportRecord {
	return predicate.ExportRecord(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ExportRecord) predicate.ExportRecord {
	return predicate.ExportRecord(sql.NotPredicates(p))
}
