// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AnonymousUsersColumns holds the columns for the "anonymous_users" table.
	AnonymousUsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "browser_fingerprint", Type: field.TypeString, Unique: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "timezone", Type: field.TypeString, Nullable: true},
		{Name: "language", Type: field.TypeString, Nullable: true},
		{Name: "screen_resolution", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "last_activity_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AnonymousUsersTable holds the schema information for the "anonymous_users" table.
	AnonymousUsersTable = &schema.Table{
		Name:       "anonymous_users",
		Columns:    AnonymousUsersColumns,
		PrimaryKey: []*schema.Column{AnonymousUsersColumns[0]},
	}
	// ConfigHistoriesColumns holds the columns for the "config_histories" table.
	ConfigHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "old_config_data", Type: field.TypeJSON, Nullable: true},
		{Name: "new_config_data", Type: field.TypeJSON},
		{Name: "change_type", Type: field.TypeString},
		{Name: "change_description", Type: field.TypeString, Nullable: true},
		{Name: "old_version", Type: field.TypeString, Nullable: true},
		{Name: "new_version", Type: field.TypeString},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_config_history", Type: field.TypeUUID},
	}
	// ConfigHistoriesTable holds the schema information for the "config_histories" table.
	ConfigHistoriesTable = &schema.Table{
		Name:       "config_histories",
		Columns:    ConfigHistoriesColumns,
		PrimaryKey: []*schema.Column{ConfigHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "config_histories_user_configs_history",
				Columns:    []*schema.Column{ConfigHistoriesColumns[10]},
				RefColumns: []*schema.Column{UserConfigsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ExportRecordsColumns holds the columns for the "export_records" table.
	ExportRecordsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "figma_file_id", Type: field.TypeString},
		{Name: "figma_file_name", Type: field.TypeString, Nullable: true},
		{Name: "figma_file_url", Type: field.TypeString, Nullable: true},
		{Name: "export_format", Type: field.TypeEnum, Enums: []string{"png", "jpg", "svg", "pdf"}},
		{Name: "export_scale", Type: field.TypeString},
		{Name: "export_settings", Type: field.TypeJSON},
		{Name: "selected_nodes", Type: field.TypeJSON, Nullable: true},
		{Name: "total_assets", Type: field.TypeInt},
		{Name: "exported_assets", Type: field.TypeInt},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"pending", "processing", "completed", "failed", "cancelled"}},
		{Name: "download_url", Type: field.TypeString, Nullable: true},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "ip_address", Type: field.TypeString, Nullable: true},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "completed_at", Type: field.TypeTime, Nullable: true},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "anonymous_user_export_records", Type: field.TypeUUID, Nullable: true},
		{Name: "user_export_records", Type: field.TypeUUID, Nullable: true},
	}
	// ExportRecordsTable holds the schema information for the "export_records" table.
	ExportRecordsTable = &schema.Table{
		Name:       "export_records",
		Columns:    ExportRecordsColumns,
		PrimaryKey: []*schema.Column{ExportRecordsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "export_records_anonymous_users_export_records",
				Columns:    []*schema.Column{ExportRecordsColumns[20]},
				RefColumns: []*schema.Column{AnonymousUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "export_records_users_export_records",
				Columns:    []*schema.Column{ExportRecordsColumns[21]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "display_name", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "bio", Type: field.TypeString, Nullable: true},
		{Name: "timezone", Type: field.TypeString, Nullable: true},
		{Name: "language", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "last_login_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserAuthsColumns holds the columns for the "user_auths" table.
	UserAuthsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "auth_type", Type: field.TypeEnum, Enums: []string{"email_password", "google", "github", "wechat", "qq", "apple", "facebook", "twitter", "linkedin"}},
		{Name: "identifier", Type: field.TypeString},
		{Name: "credential", Type: field.TypeString, Nullable: true},
		{Name: "provider_user_id", Type: field.TypeString, Nullable: true},
		{Name: "provider_username", Type: field.TypeString, Nullable: true},
		{Name: "provider_email", Type: field.TypeString, Nullable: true},
		{Name: "provider_avatar", Type: field.TypeString, Nullable: true},
		{Name: "provider_data", Type: field.TypeJSON, Nullable: true},
		{Name: "access_token", Type: field.TypeString, Nullable: true},
		{Name: "refresh_token", Type: field.TypeString, Nullable: true},
		{Name: "token_expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "is_primary", Type: field.TypeBool},
		{Name: "is_enabled", Type: field.TypeBool},
		{Name: "last_used_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_auth_methods", Type: field.TypeUUID},
	}
	// UserAuthsTable holds the schema information for the "user_auths" table.
	UserAuthsTable = &schema.Table{
		Name:       "user_auths",
		Columns:    UserAuthsColumns,
		PrimaryKey: []*schema.Column{UserAuthsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_auths_users_auth_methods",
				Columns:    []*schema.Column{UserAuthsColumns[17]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userauth_auth_type_identifier",
				Unique:  true,
				Columns: []*schema.Column{UserAuthsColumns[1], UserAuthsColumns[2]},
			},
			{
				Name:    "userauth_auth_type_provider_user_id",
				Unique:  true,
				Columns: []*schema.Column{UserAuthsColumns[1], UserAuthsColumns[4]},
			},
			{
				Name:    "userauth_identifier",
				Unique:  false,
				Columns: []*schema.Column{UserAuthsColumns[2]},
			},
			{
				Name:    "userauth_is_enabled",
				Unique:  false,
				Columns: []*schema.Column{UserAuthsColumns[13]},
			},
			{
				Name:    "userauth_last_used_at",
				Unique:  false,
				Columns: []*schema.Column{UserAuthsColumns[14]},
			},
		},
	}
	// UserConfigsColumns holds the columns for the "user_configs" table.
	UserConfigsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "config_data", Type: field.TypeJSON},
		{Name: "version", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_default", Type: field.TypeBool},
		{Name: "is_active", Type: field.TypeBool},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "anonymous_user_configs", Type: field.TypeUUID, Nullable: true},
		{Name: "user_configs", Type: field.TypeUUID, Nullable: true},
	}
	// UserConfigsTable holds the schema information for the "user_configs" table.
	UserConfigsTable = &schema.Table{
		Name:       "user_configs",
		Columns:    UserConfigsColumns,
		PrimaryKey: []*schema.Column{UserConfigsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_configs_anonymous_users_configs",
				Columns:    []*schema.Column{UserConfigsColumns[9]},
				RefColumns: []*schema.Column{AnonymousUsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_configs_users_configs",
				Columns:    []*schema.Column{UserConfigsColumns[10]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AnonymousUsersTable,
		ConfigHistoriesTable,
		ExportRecordsTable,
		UsersTable,
		UserAuthsTable,
		UserConfigsTable,
	}
)

func init() {
	ConfigHistoriesTable.ForeignKeys[0].RefTable = UserConfigsTable
	ExportRecordsTable.ForeignKeys[0].RefTable = AnonymousUsersTable
	ExportRecordsTable.ForeignKeys[1].RefTable = UsersTable
	UserAuthsTable.ForeignKeys[0].RefTable = UsersTable
	UserConfigsTable.ForeignKeys[0].RefTable = AnonymousUsersTable
	UserConfigsTable.ForeignKeys[1].RefTable = UsersTable
}
